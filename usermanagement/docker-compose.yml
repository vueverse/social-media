version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/usermanagement
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: user
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: your-realm
      KEYCLOAK_RESOURCE: your-client
    depends_on:
      - db
      - keycloak
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: usermanagement
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5433:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: http://localhost:8081
    ports:
      - "8081:8080"  # Expose Keycloak on 8081 to avoid conflict with app
    command:
      - start-dev
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-db
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/auth/realms/master || exit 1']
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  keycloak_data:

networks:
  app-network:
